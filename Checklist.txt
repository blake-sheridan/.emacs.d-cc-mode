Checklist for doing a release:

    - Run regression tests in as many Emacsen as possible.  Make sure
      there are no failures.

    - Proofread manual.

    - Update ChangeLog.

    - Add `Release 5.xx' tag to ChangeLog using C-x 4 a.  Release.py
      script looks for this.

    - Distill changes for NEWS file.

    - Proofread and update ANNOUNCEMENT, MANIFEST, NEWS, README for
      the new release.  Make sure the copyright statements in all
      files are up-to-date.

    - Update the web files in the admin directory:

      o  Create a new changes-5xx.php file from the new items i NEWS.
      o  Add a new entry for the changes file in changelinks.h.
      o  Update the version number in index.php and release.php.
      o  Check at least release.php for correctness.

    - Run "make release" to make all the tarballs and documentation.

      XX is the minor revision number of the new release.

      This creates the following files in dist:
          cc-mode-5.XX.emacs.tar.gz
          cc-mode-5.XX.xemacs.tar.gz
          cc-mode-5.XX.tar.gz
          cc-mode.dvi.gz
          cc-mode.ps.gz
          cc-mode.rev.ps.gz
          cc-mode.info.tar.gz
	  cc-mode.html.tar.gz

      The first two tarballs is to be sent to Emacs and XEmacs
      respectively.  They contain only the files that are necessary
      for those releases.  However, I typically don't send them stuff
      until they see the Net announcements and ask for the files.
      This lets them sync our releases up to their own release cycle.

    - Update the SourceForge site:

      o  Do a new release in the SourceForge pages.
      o  Copy the manual files to the manual subdir.
      o  Unpack the standalone tarball into the web root dir and name
	 the subdir "src".
      o  Unpack cc-mode.html.tar.gz into the web root dir and name the
	 subdir "html-manual".
      o  Update the web files with cvs update.
      o  Check that the links work.

    - Send ANNOUNCEMENT file to
      cc-mode-announce@lists.sourceforge.net.  (Don't forget to use
      the correct sender and From header.)

    - Post ANNOUNCEMENT to the following newsgroups:
	gnu.emacs.sources
	comp.emacs.xemacs
	comp.emacs
      (Don't forget the correct sender here either.)

    - Tag the release using "./Release.py --tag XX" where XX is the
      number used above.  If you find a problem in the released
      tarball, retag using -T option.  Very important!  Make sure the
      tag is set before doing the bump (next step).

    - Bump the current release by running "./Release.py --bump XX+1"
      Do not do this until the previous release has been tagged, and
      only do this as a last step!

    - You're now ready to start hacking the next version.
